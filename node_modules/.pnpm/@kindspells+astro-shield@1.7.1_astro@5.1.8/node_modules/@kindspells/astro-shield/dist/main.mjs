var n = Object.defineProperty;
var t = (l, e) => n(l, "name", { value: e, configurable: !0 });
import { getAstroConfigSetup as d, getAstroBuildDone as c } from "#as/core";
var h = Object.defineProperty, r = /* @__PURE__ */ t((l, e) => h(l, "name", { value: e, configurable: !0 }), "o");
const p = /* @__PURE__ */ r((l) => console.warn(`
WARNING (@kindspells/astro-shield):
	${l}
`), "logWarn"), b = /* @__PURE__ */ r(({
  delayTransform: l,
  securityHeaders: e,
  sri: s
}) => {
  const a = {
    enableMiddleware: s?.enableMiddleware ?? !1,
    enableStatic: s?.enableStatic ?? !0,
    hashesModule: s?.hashesModule,
    allowInlineScripts: s?.allowInlineScripts ?? "all",
    allowInlineStyles: s?.allowInlineStyles ?? "all",
    scriptsAllowListUrls: s?.scriptsAllowListUrls ?? [],
    stylesAllowListUrls: s?.stylesAllowListUrls ?? []
  };
  a.hashesModule && a.enableStatic === !1 && p("`sri.hashesModule` is ignored when `sri.enableStatic` is `false`");
  const i = l ?? e?.enableOnStaticPages?.provider === "vercel", o = {
    delayTransform: i,
    config: {}
  };
  return {
    name: "@kindspells/astro-shield",
    hooks: {
      "astro:config:setup": d(o, a, e),
      ...i ? void 0 : {
        "astro:build:done": c(o, a, e)
      }
    }
  };
}, "shield");
export {
  b as default,
  b as shield
};
//# sourceMappingURL=main.mjs.map
